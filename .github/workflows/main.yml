name: Deploy FastAPI to EC2

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: soojin434/fastapi-prompting
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_SSH_USER: ${{ secrets.SERVER_SSH_USER }}
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}   # ← 여기에 'soojin434' 저장
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Check image contents (optional)
        run: docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:latest ls -al /app

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy-to-ubuntu-server:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 234
          script: |
            set -e

            APP_NAME=mindsync-ai-container
            IMAGE=${{ env.DOCKER_IMAGE_NAME }}:latest
            LOG_DIR="$HOME/app-logs/fastapi"
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mkdir -p "$LOG_DIR"

            # 가벼운 정리
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker container prune -f || true
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker image prune -f || true

            # 공용 네트워크(appnet) 준비 및 mongodb 연결 (있으면 무시)
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker network create appnet || true
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker network connect appnet mongodb || true

            # 기존 컨테이너 제거
            if sudo docker ps -a --format '{{.Names}}' | grep -q "^${APP_NAME}$"; then
              echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker rm -f ${APP_NAME} || true
            fi

            # 최신 이미지 pull
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker pull ${IMAGE}

            # 재실행 (외부 8082 → 내부 8000)
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker run -d \
              --name ${APP_NAME} \
              --network appnet \
              -p 8082:8000 \
              -e TZ=Asia/Seoul \
              -e GEMINI_API_KEY='${{ secrets.GEMINI_API_KEY }}' \
              -e MONGO_URI='${{ secrets.MONGO_URI }}' \
              -v "$LOG_DIR:/app/logs" \
              ${IMAGE}

            # 상태 확인
            sleep 5
            sudo docker ps --filter "name=${APP_NAME}"
            # 간단 헬스 체크
            # curl -sf http://localhost:8082/health || true

            echo "✅ FastAPI deployed on :8082"
